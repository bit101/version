#! /bin/sh

ver="v0.3.3"

# note: replace - with _ in tool name. e.g. pkg-config -> tools_pkg_config
# script will sanitize the input the same way

tools_alacritty=-V
tools_apt=-v
tools_arduino=--version
tools_audacious=-v
tools_autoconf=--version
tools_automake=--version
tools_awk=--version
tools_bash=--version
tools_bibtex=-version
tools_borg=-V
tools_brew=--version
tools_bundle=-v
tools_bundler=-v
tools_cargo=--version
tools_carthage=version
tools_ccmake=--version
tools_cheese=--version
tools_chromium=--version
tools_clang=--version
tools_clang_format=--version
tools_clisp=--version
tools_cmake=--version
tools_code=--version
tools_coffee=-v
tools_conky=-v
tools_convert=--version
tools_crystal=-v
tools_ctags=--version
tools_curl=--version
tools_direnv=version
tools_docker=-v
tools_dotnet=--version
tools_elixir=-v
tools_elm=--version
tools_eog=--version
tools_exa=-v
tools_expac=--version
tools_ffmpeg=-version
tools_flac=-v
tools_firefox=-v
tools_fish=-v
tools_fzf=--version
tools_gcc=--version
tools_gdb=--version
tools_gedit=--version
tools_gem=-v
tools_ghc=--version
tools_gimp=-version
tools_git=--version
tools_gitkraken=--version
tools_go=version
tools_google_chrome_stable=--version
tools_gradle=--version
tools_grep=-V
tools_guake=--version
tools_haxe=-version
tools_haxelib=version
tools_heroku=-v
tools_htop=-v
tools_inkscape=--version
tools_java=-version
tools_javac=-version
tools_julia=-v
tools_kodi=-v
tools_kotlin=-version
tools_lame=-v
tools_latex=-version
tools_latexmk=-version
tools_libreoffice=--version
tools_love=--version
tools_lua=-v
tools_magick=--version
tools_make=-v
tools_man=--version
tools_meld=--version
tools_mousepad=-v
tools_mpv=--version
tools_nano=--version
tools_nautilus=--version
tools_ncdu=-v
tools_ninja=--version
tools_node=-v
tools_nokogiri=-v
tools_nordvpn=-v
tools_npm=-v
tools_npx=-v
tools_nvim=-version
tools_pacman=--version
tools_pamac=--version
tools_pdflatex=-version
tools_perl=-v
tools_php=-v
tools_pip3=-V
tools_pip=-V
tools_pkg_config=--version
tools_python2=-V
tools_python3=-V
tools_python=-V
tools_rake=--version
tools_ranger=--version
tools_rbenv=-v
tools_restic=version
tools_rg=-V
tools_rofi=-v
tools_rome=--version
tools_rsync=--version
tools_rubocop=-v
tools_ruby=-v
tools_rustc=--version
tools_samba=--version
tools_sbatch=-V
tools_scalac=-version
tools_screen=-v
tools_sed=--version
tools_sidekiq=--version
tools_sinfo=-V
tools_slack=-v
tools_snap=--version
tools_spotify=--version
tools_squeue=-V
tools_ssh=-V
tools_swift=-version
tools_syncthing=-version
tools_tex=-version
tools_thefuck=-v
tools_thunar=--version
tools_tlmgr=version
tools_tmux=-V
tools_tsc=-v
tools_valgrind=--version
tools_version=-v
tools_vi=-version
tools_viewnior=--version
tools_vim=-version
tools_virt_manager=--version
tools_vlc=--version
tools_wine=--version
tools_wget=--version
tools_xelatex=-version
tools_xetex=-version
tools_xrandr=-v
tools_xsel=--version
tools_yarn=version
tools_yay=--version
tools_zathura=--version
tools_zsh=--version

list_tools() {
  egrep -o "^tools_[^=]*" $(basename "$0") | grep -oP "tools_\K(.*)"
}

# User forgot to specify the program or a flag
if [ -z $1 ]
then
  echo "Usage: version <program>"
  exit
fi

# Display help
if [ $1 = "-h" ]
then
  echo "version displays the versions of programs you have installed."
  echo ""
  echo "Usage:"
  echo "  version <program>    display version of program"
  echo "                       (if known and installed)"
  echo "  version -h           display this help"
  echo "  version -l           display a list of known programs"
  echo "  version -c           display count of known programs"
  echo "  version -v           display version of version"
  echo "                       (yes, 'version version' also works!)"
  exit
fi

# Display recognized program count
if [ $1 = "-c" ]
then
  count=$(list_tools | wc -l)
  echo "I know how to find the versions of $count programs!"
  exit
fi

# Display version of version
if [ $1 = "-v" ]
then
  echo "version $ver"
  exit
fi

# Display all the tools we know
if [ $1 = "-l" ]
then
  list_tools
  exit
fi

sanitized=`echo "$1" | sed -e "s/-/_/"`
tool=tools_$sanitized
eval version_arg=\"\$$tool\"

# do we know about this program?
if [ -z $version_arg ]
then
  echo "I don't know how to find the version of '$1'."
  echo "If you figure it out, let me know at https://github.com/bit101/version"
  exit
fi

# display the correct command for the user
echo "Command: $1 $version_arg"

# does the user have this program installed?
$1 >/dev/null 2>&1
if [ "${?}" = 127 ]
then
  echo "But '$1' does not seem to be installed"
  exit
fi

# success. make the call to display the version.
$1 $version_arg
